/// Position container
///
/// Just sets `position: relative;` as this is required for positions.
///
/// @group position
@mixin position-container() {
  position: relative;
}

/// Position
///
/// @param {string} $x ['center']
/// @param {string} $y ['center']
///
/// @group position
@mixin position($x: 'center', $y: 'center') {
  @include x-position($x);
  @include y-position($y);

  @if ($x == 'center') and ($y == 'center') {
    transform: translate(-50%, -50%);
  }
}

/// X-Position
///
/// @param {string} $x ['center']
///
/// @group position
@mixin x-position($x: 'center') {
  position: absolute;

  @if $x == 'outerleft' {
    left: auto;
    right: 100%;
  } @else if $x == 'left' {
    left: 0;
  } @else if $x == 'right' {
    left: auto;
    right: 0;
  } @else if $x == 'outerright' {
    left: 100%;
  } @else if $x == 'center' {
    left: 50%;
    transform: translateX(-50%);
  }
}

/// Y-Position
///
/// @param {string} $y ['center']
///
/// @group position
@mixin y-position($y: 'center') {
  position: absolute;

  @if $y == 'outertop' {
    top: auto;
    bottom: 100%;
  } @else if $y == 'top' {
    top: 0;
  } @else if $y == 'bottom' {
    top: auto;
    bottom: 0;
  } @else if $y == 'outerbottom' {
    top: 100%
  } @else if $y == 'center' {
    top: 50%;
    transform: translateY(-50%);
  }
}

/// Position reset
///
/// Reset all position settings
///
/// @group position
@mixin position-reset() {
  position: static;
  top: auto;
  left: auto;
  right: auto;
  bottom: auto;
  transform: none;
}
